#!/bin/bash
# Gets and modifies official-repo packages from a list
# You must disable the blackarch repository before running this.

# usage: make-official <directory>
# The list is read in on stdin.
# The list format is as follows.
#    <package> <groups...>
#    ...

if [[ $# == 0 ]] ; then
	echo >&2 'Please specify a directory to put the packages in.'
	exit 1
fi

cleanup() {
	rm -rf "$tmp"

	# Kill gpg-agent.
	[[ -n "$GPG_AGENT_INFO" ]] && kill "$(cut -d: -f2 <<< "$GPG_AGENT_INFO")"
}
trap cleanup EXIT

# Directory for the packages.
dir=$(realpath "$1")
mkdir -p "$dir"

# Directory with dependencies.
deps=$(dirname "$(realpath "$0")")

# We need root privledges for pacman.
sudo -v

sudo pacman -Sy || exit 1
tmp=$(mktemp -d)
cd "$tmp"

while read line ; do
	pack_name=$(cut -d' ' -f1 <<< "$line")
	groups=( $(cut -d' ' -f2- <<< "$line") )
	pack_ver="${pack_name}-$(pacman -Si "$pack_name" | sed -n '/^Version/s/^Version\s*:\s*//p')"

	# Get the file.
	sudo pacman --noconfirm -Sdw "$pack_name" > /dev/null

	pack_file=$(basename /var/cache/pacman/pkg/${pack_ver}-*.pkg.tar.xz)

	# Debugging information
	echo Name: $pack_name
	echo Groups: ${groups[@]}
	echo Name + Version: $pack_ver
	echo File: $pack_file

	# cache -> temporary
	cp "/var/cache/pacman/pkg/$pack_file" .
	# Add the groups.
	$deps/add-to-groups "$pack_file" "${groups[@]}"
	# temporary -> final dir
	cp "$pack_file" "$dir"

	echo
done

# Start gpg-agent.
[[ -z "$GPG_TTY" ]] && export GPG_TTY=$(tty)
[[ -z "$GPG_AGENT_INFO" ]] && eval $(gpg-agent --daemon)

# Sign the packages.
for package in "$dir"/*.pkg.tar.xz ; do
	gpg -b "$package"
done
